{"version":3,"sources":["libs/util.js","components/Balans/index.js","components/NavBar/index.js","components/SearchBar/index.js","components/ModalForm/index.js","components/EditModal/index.js","components/ListPayments/index.js","components/AddModal/index.js","components/AddPay/index.js","components/Dashboard/index.js","components/SignIn/index.js","components/SignUp/index.js","components/App/index.js","index.js"],"names":["moneyFormat","n","parseFloat","toFixed","replace","Balans","className","Header","Layout","NavBar","to","type","shape","icon","LogoutOutlined","Search","Input","SearchBar","placeholder","onSearch","value","console","log","enterButton","ModalForm","props","showModal","onOk","onCancel","initialValues","title","Form","useForm","form","centered","visible","validateFields","then","values","resetFields","catch","info","cancelText","labelCol","span","wrapperCol","layout","size","Item","name","label","rules","required","message","format","locale","precision","EditModal","show","onShow","record","defValues","sum","category","period","moment","recipient","param","key","ListPayments","useState","setShow","setRecord","columns","dataIndex","sorter","compare","a","b","Date","multiple","nameA","toLowerCase","nameB","render","val","text","curRecord","EditOutlined","onClick","onConfirm","QuestionCircleOutlined","style","color","CloseOutlined","dataSource","pagination","AddModal","AddPay","PlusOutlined","Dashboard","tailLayout","offset","SignIn","onFinish","onFinishFailed","errorInfo","Password","htmlType","SignUp","hasFeedback","dependencies","getFieldValue","validator","rule","Promise","reject","Error","resolve","whitespace","Content","Footer","App","exact","path","component","textAlign","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5633ebdc.chunk.js","sourcesContent":["const moneyFormat = (n) => parseFloat(n)\n  .toFixed(2)\n  .replace(/(\\d)(?=(\\d{3})+\\.)/g, '$1 ')\n  .replace('.', ',');\n\n// eslint-disable-next-line import/prefer-default-export\nexport { moneyFormat };\n","import React from 'react';\nimport './style.css';\nimport { moneyFormat } from '../../libs/util';\n\nfunction Balans() {\n  return (\n    <div className=\"balans\">\n      <span className=\"balans__info\">Баланс</span>\n      <span className=\"balans__sum\">{moneyFormat(1000)}</span>\n      <span className=\"balans__rub\">руб.</span>\n    </div>\n  );\n}\n\nexport default Balans;\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Layout, Button } from 'antd';\nimport { LogoutOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\nimport './style.css';\nimport Balans from '../Balans';\n\nconst { Header } = Layout;\n\nfunction NavBar() {\n  return (\n    <Header className=\"nav\">\n      <div className=\"nav__row\">\n        <Link to=\"/\" className=\"logo\">MyMoney</Link>\n        <Balans />\n        <div className=\"nav__block\">\n          <Button type=\"primary\" shape=\"circle\" className=\"nav__but\">GO</Button>\n          <Button type=\"link\" icon={<LogoutOutlined />} className=\"nav__exit\">Выход</Button>\n        </div>\n      </div>\n    </Header>\n  );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport { Input } from 'antd';\nimport './style.css';\n\nconst { Search } = Input;\n\nfunction SearchBar() {\n  return (\n    <div className=\"searchbar\">\n      <span className=\"searchbar__text\">Поиск операций:</span>\n      <Search placeholder=\"по сумме, категории, получателю\" onSearch={(value) => console.log(value)} enterButton className=\"searchbar__input\" />\n    </div>\n  );\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport {\n  Modal, Form, DatePicker, Input, InputNumber,\n} from 'antd';\nimport locale from 'antd/es/date-picker/locale/ru_RU';\n\n\nfunction ModalForm(props) {\n  const {\n    showModal, onOk, onCancel, initialValues, title,\n  } = props;\n  const dateFormat = 'DD.MM.YYYY';\n  const [form] = Form.useForm();\n  const onFuncOk = () => {\n    form\n      .validateFields()\n      .then((values) => {\n        form.resetFields();\n        onOk(values);\n      })\n      .catch((info) => {\n        console.log('Ошибка валидации:', info);\n      });\n  };\n  return (\n    <Modal\n      title={title}\n      centered\n      visible={showModal}\n      onOk={onFuncOk}\n      onCancel={onCancel}\n      cancelText=\"Отмена\"\n    >\n      <Form\n        form={form}\n        labelCol={{ span: 5 }}\n        wrapperCol={{ span: 19 }}\n        layout=\"horizontal\"\n        size=\"middle\"\n        initialValues={initialValues}\n      >\n        <Form.Item\n          name=\"period\"\n          label=\"Дата\"\n          rules={[{\n            required: true,\n            message: 'Дата транзакции обязательна!',\n          }]}\n        >\n          <DatePicker format={dateFormat} locale={locale} />\n        </Form.Item>\n        <Form.Item\n          name=\"category\"\n          label=\"Категория\"\n          rules={[{\n            required: true,\n            message: 'Категория обязательна!',\n          }]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          name=\"sum\"\n          label=\"Сумма\"\n          rules={[{\n            required: true,\n            message: 'Сумма обязательна!',\n          }]}\n        >\n          <InputNumber precision={2} />\n        </Form.Item>\n        <Form.Item name=\"recipient\" label=\"Получатель\">\n          <Input />\n        </Form.Item>\n      </Form>\n\n    </Modal>\n  );\n}\n\nexport default ModalForm;\n","import React from 'react';\nimport moment from 'moment';\nimport ModalForm from '../ModalForm';\n\nfunction EditModal(props) {\n  const { show, onShow, record } = props;\n\n  let defValues = {};\n\n  if (record !== null) {\n    defValues = {\n      sum: record.sum,\n      category: record.category,\n      period: moment(record.period, 'DD.MM.YYYY'),\n      recipient: record.recipient,\n    };\n  }\n\n  const param = {\n    showModal: show,\n    onOk: (values) => {\n      console.log(values);\n      console.log(record.key);\n      onShow();\n    },\n    onCancel: onShow,\n    initialValues: defValues,\n    title: 'Редактировать транзакцию',\n  };\n\n  return (\n    <ModalForm {...param} />\n  );\n}\n\nexport default EditModal;\n","import React, { useState } from 'react';\nimport { Table, Button, Popconfirm } from 'antd';\nimport { EditOutlined, CloseOutlined, QuestionCircleOutlined } from '@ant-design/icons';\nimport './style.css';\nimport { moneyFormat } from '../../libs/util';\nimport EditModal from '../EditModal';\n\n\nfunction ListPayments() {\n  const [show, setShow] = useState(false);\n  const [record, setRecord] = useState(null);\n\n  const columns = [\n    {\n      title: 'Дата',\n      dataIndex: 'period',\n      sorter: {\n        compare: (a, b) => {\n          const dateA = new Date(a.period);\n          const dateB = new Date(b.period);\n          return dateA - dateB;\n        },\n        multiple: 3,\n      },\n    },\n    {\n      title: 'Категория',\n      dataIndex: 'category',\n      sorter: {\n        compare: (a, b) => {\n          const nameA = a.category.toLowerCase();\n          const nameB = b.category.toLowerCase();\n          if (nameA < nameB) return -1;\n          if (nameA > nameB) return 1;\n          return 0;\n        },\n        multiple: 2,\n      },\n    },\n    {\n      title: 'Сумма',\n      dataIndex: 'sum',\n      sorter: {\n        compare: (a, b) => a.sum - b.sum,\n        multiple: 1,\n      },\n      render: (val) => (\n        <div className=\"list__sum\">\n          { moneyFormat(val) }\n        </div>\n      ),\n    },\n    {\n      title: 'Получатель',\n      dataIndex: 'recipient',\n      sorter: {\n        compare: (a, b) => {\n          const nameA = a.recipient.toLowerCase();\n          const nameB = b.recipient.toLowerCase();\n          if (nameA < nameB) return -1;\n          if (nameA > nameB) return 1;\n          return 0;\n        },\n        multiple: 4,\n      },\n    },\n    {\n      title: 'Действия',\n      dataIndex: 'action',\n      render: (text, curRecord) => (\n        <div>\n          <Button\n            type=\"link\"\n            icon={<EditOutlined />}\n            onClick={() => {\n              setRecord(curRecord);\n              setShow(true);\n            }}\n          />\n          <Popconfirm title=\"Удалить запись?\" onConfirm={() => console.log(record.key)} cancelText=\"Отмена\" icon={<QuestionCircleOutlined style={{ color: 'red' }} />}>\n            <Button type=\"link\" icon={<CloseOutlined />} />\n          </Popconfirm>\n        </div>\n      ),\n    },\n  ];\n\n  const data = [\n    {\n      key: '1',\n      period: '06.03.2020',\n      category: 'Транспорт',\n      sum: -26,\n      recipient: '',\n    },\n    {\n      key: '2',\n      period: '06.03.2020',\n      category: 'Продукты, еда',\n      sum: -260,\n      recipient: 'Магнит',\n    },\n    {\n      key: '3',\n      period: '05.03.2020',\n      category: 'Образование',\n      sum: -87,\n      recipient: 'Веб-сайт',\n    },\n    {\n      key: '4',\n      period: '05.03.2020',\n      category: 'Здоровье',\n      sum: -49.90,\n      recipient: 'Аптека',\n    },\n    {\n      key: '5',\n      period: '04.03.2020',\n      category: 'Зарплата',\n      sum: 10000,\n      recipient: 'Работа',\n    },\n  ];\n\n  const param = {\n    show,\n    onShow: () => setShow(false),\n    record,\n    key: record == null ? 0 : record.key,\n  };\n\n  return (\n    <>\n      <EditModal {...param} />\n      <Table columns={columns} dataSource={data} pagination={false} />\n    </>\n  );\n}\n\nexport default ListPayments;\n","import React from 'react';\nimport moment from 'moment';\nimport ModalForm from '../ModalForm';\n\nfunction AddModal(props) {\n  const { show, onShow } = props;\n\n  const param = {\n    showModal: show,\n    onOk: (values) => {\n      console.log(values);\n      onShow();\n    },\n    onCancel: onShow,\n    initialValues: {\n      sum: 0,\n      category: '',\n      period: moment(),\n      recipient: '',\n    },\n    title: 'Добавить транзакцию',\n  };\n  return (\n    <ModalForm {...param} />\n  );\n}\n\nexport default AddModal;\n","import React, { useState } from 'react';\nimport { Button } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport AddModal from '../AddModal';\n\nfunction AddPay() {\n  const [show, setShow] = useState(false);\n  return (\n    <>\n      <AddModal show={show} onShow={() => setShow(false)} />\n      <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => setShow(true)}>\n        Добавить транзакцию\n      </Button>\n    </>\n  );\n}\n\nexport default AddPay;\n","import React from 'react';\nimport SearchBar from '../SearchBar';\nimport ListPayments from '../ListPayments';\nimport AddPay from '../AddPay';\nimport './style.css';\n\nfunction Dashboard() {\n  return (\n    <div className=\"dashboard\">\n      <div className=\"dashboard__block\">\n        <AddPay />\n        <SearchBar />\n      </div>\n      <ListPayments />\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport { Form, Input, Button } from 'antd';\nimport './style.css';\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 10,\n  },\n};\n\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nfunction SignIn() {\n  const onFinish = (values) => {\n    console.log('Success:', values);\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n  return (\n    <div className=\"signin\">\n      <Form {...layout} name=\"basic\" onFinish={onFinish} onFinishFailed={onFinishFailed} className=\"signin__form\">\n        <Form.Item\n          label=\"Email\"\n          name=\"email\"\n          rules={[\n            {\n              type: 'email',\n              message: 'Введённая информация не является допустимым E-mail!',\n            },\n            {\n              required: true,\n              message: 'Пожалуйста, введите Ваш E-mail!!',\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Пароль\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: 'Пожалуйста, введите Ваш пароль!',\n            },\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Вход\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n}\n\nexport default SignIn;\n","import React from 'react';\nimport { Form, Input, Button } from 'antd';\nimport './style.css';\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 10,\n  },\n};\n\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nfunction SignUp() {\n  const onFinish = (values) => {\n    console.log('Success:', values);\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n  return (\n    <div className=\"signup\">\n      <Form {...layout} name=\"basic\" onFinish={onFinish} onFinishFailed={onFinishFailed} className=\"signup__form\">\n        <Form.Item\n          label=\"Email\"\n          name=\"email\"\n          rules={[\n            {\n              type: 'email',\n              message: 'Не допустимый E-mail!',\n            },\n            {\n              required: true,\n              message: 'Пожалуйста, введите Ваш E-mail!!',\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Пароль\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: 'Пожалуйста, введите Ваш пароль!',\n            },\n          ]}\n          hasFeedback\n        >\n          <Input.Password />\n        </Form.Item>\n        <Form.Item\n          name=\"confirm\"\n          label=\"Подтвердите Пароль\"\n          dependencies={['password']}\n          hasFeedback\n          rules={[\n            {\n              required: true,\n              message: 'Please confirm your password!',\n            },\n            ({ getFieldValue }) => ({\n              validator(rule, value) {\n                if (!value || getFieldValue('password') === value) {\n                  return Promise.resolve();\n                }\n                return Promise.reject(new Error('Два пароля, которые вы ввели, не совпадают!'));\n              },\n            }),\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item\n          name=\"nickname\"\n          label=\"Псевдоним\"\n          rules={[\n            {\n              required: true,\n              message: 'Пожалуйстав введите Ваш псевдоним!',\n              whitespace: true,\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Регистрация\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n}\n\nexport default SignUp;\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Layout } from 'antd';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport NavBar from '../NavBar';\nimport Dashboard from '../Dashboard';\nimport SignIn from '../SignIn';\nimport SignUp from '../SignUp';\n\nconst { Content, Footer } = Layout;\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Layout className=\"layout\">\n        <NavBar />\n        <Content className=\"site-layout content\">\n          <div className=\"site-layout-background content__block\">\n            <Switch>\n              <Route exact path=\"/\" component={Dashboard} />\n              <Route path=\"/signin\" component={SignIn} />\n              <Route path=\"/signup\" component={SignUp} />\n            </Switch>\n          </div>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>MyMoney ©2020 Создал Гребенёв Олег</Footer>\n      </Layout>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}